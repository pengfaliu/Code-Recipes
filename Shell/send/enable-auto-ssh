#!/usr/bin/expect -f
#
# Author: DongFeng
#
# $Source: enable-auto-ssh.exp,v $
#
## variables
set prefix "\033\[1;31m>>>\033\[0m"
proc usage {} {
	global argv0
	regsub ".*/" $argv0 "" name
	send_user "Usage:\n"
	#send_user "    $name \[user@]host sshport  password\n"
	send_user "      \033\[1;32m $name \[user@host] sshpor passwd \033\[0m\n"
        send_user "\n"
	send_user "Report bugs to <\033\[1;31myingcai.haung@139.com]\033\[0m>\n"
	exit 1
}
proc check_id_files {} {
	global id_file prefix
	if {! [file exists $id_file]} {
		send_user "$prefix id file not found, try creating ...\n"
		if {[catch { spawn ssh-keygen -t rsa } error]} {
			send_error "$prefix $error\n"
			exit 1
		}
		expect -nocase -re "\(.*\):"
		send -- "\r"
		expect -nocase -re "passphrase.*:"
		send -- "\r"
		expect -nocase -re "passphrase.*again:"
		send -- "\r"
		expect eof
		send_user "$prefix id file successfully created\n"
	}
}
## get host and password from command line parameters
if {[llength $argv] != 3} {
	usage
}
set user@host [lindex $argv 0]
set passwd [lindex $argv 2]
set port [lindex $argv 1]
## create public key file if not found
set id_file "$env(HOME)/.ssh/id_rsa.pub"
check_id_files
## ssh to host
set yes_no 0
set ok_string SUCCESS
set timeout 15 
spawn ssh ${user@host} -p $port echo $ok_string
expect {
	-nocase -re "yes/no" {
		set yes_no 1
		send -- "yes\r"
	}
	-nocase -re "password: " {}
	$ok_string {
		send_user "$prefix already ok\n"
		exit 0
	}
	eof {
		send_error "$prefix failed\n"
		exit 1
	}
	timeout {
		send_error "$prefix timeout\n"
		exit 1
	}
}
if {$yes_no} {
	expect {
		$ok_string {
			send_user "$prefix already ok\n"
			exit 0
		}
		-nocase -re "password: " {}
	}
}
send -- "$passwd\r"
expect {
	-nocase "try again" {
		send_error "$prefix passwd error\n"
		exit 1
	}
	$ok_string {}
}
expect eof
## append public key file to remote host's ~/.ssh/authorized_keys
if {[catch {
		set IDFILE [open $id_file RDONLY]
		set pub_key [read $IDFILE]
		close $IDFILE
	} error]} {
	send_error "$prefix $error\n"
	exit 1
}
set pub_key [string trimright $pub_key "\r\n"]
spawn ssh ${user@host} -p $port "cd; mkdir .ssh 2> /dev/null; echo '$pub_key' >> .ssh/authorized_keys"
expect -nocase -re "password:"
send -- "$passwd\r"
send_user "\n$prefix good luck\n"
expect eof
## THE END
